# To get started with Dependabot version updates, you'll need to specify which
# package ecosystems to update and where the package manifests are located.
# Please see the documentation for all configuration options:
# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates

version: 2
updates:
  # Enable version updates for npm
  - package-ecosystem: "npm"
    # Look for package.json and lock files in the root directory
    directory: "/"
    # Check the npm registry for updates every day (weekdays)
    schedule:
      interval: "daily"

  # Enable version updates for Docker
  - package-ecosystem: "docker"
    # Look for a Dockerfile in the root directory
    directory: "/"
    # Check for updates once a week
    schedule:
      interval: "weekly"

  # Enable version updates for Bundler
  - package-ecosystem: "bundler"
    # Look for a Bundler in the root directory
    directory: "/"
    # Check for updates once a week
    schedule:
      interval: "weekly"

  # Enable version updates for Composer
  - package-ecosystem: "composer"
    # Look for a Composer in the root directory
    directory: "/"
    # Check for updates every day (weekdays)
    schedule:
      interval: "daily"

  # Enable version updates for Go modules
  - package-ecosystem: "gomod"
    # Look for a Go modules in the root directory
    directory: "/"
    # Check for updates every day (weekdays)
    schedule:
      interval: "daily"

  # Enable version updates for Gradle
  - package-ecosystem: "gradle"
    # Look for a Gradle in the root directory
    directory: "/"
    # Check for updates once a week
    schedule:
      interval: "weekly"

  # Enable version updates for Maven
  - package-ecosystem: "maven"
    # Look for a Maven in the root directory
    directory: "/"
    # Check for updates once a week
    schedule:
      interval: "weekly"

  # Enable version updates for pip
  - package-ecosystem: "pip"
    # Look for a pip in the root directory
    directory: "/"
    # Check for updates every day (weekdays)
    schedule:
      interval: "daily"      

  # Enable version updates for Terraform
  - package-ecosystem: "terraform"
    # Look for a Terraform in the root directory
    directory: "/"
    # Check for updates every day (weekdays)
    schedule:
      interval: "daily"
